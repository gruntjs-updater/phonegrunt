{"name":"Phonegrunt","tagline":"A grunt plugin for automating PhoneGap application development tasks.","body":"## Getting Started\r\nThis plugin requires Grunt `~0.4.2` and supports PhoneGap API `~3.3.0-0.19.6`.\r\n\r\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\r\n\r\n```shell\r\n$ npm install phonegrunt --save-dev\r\n```\r\n\r\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\r\n\r\n```js\r\ngrunt.loadNpmTasks('phonegrunt');\r\n```\r\n\r\n## The \"PhoneGrunt\" task\r\n\r\n### Overview\r\nIn your project's Gruntfile, add a section named `phonegrunt` to the data object passed into `grunt.initConfig()`.\r\n\r\n```js\r\ngrunt.initConfig({\r\n\r\n    phonegrunt: {\r\n\r\n        /* Global task options */\r\n        options: {\r\n            // Mobile app install path, PhoneGap, and Cordova binary paths go here.\r\n        },\r\n\r\n        /* Global initialization configuration. */\r\n        init: {\r\n            // Mobile application title, package name, and target mobile operating systems are defined here.\r\n        },\r\n\r\n        /* Global build configuration. */\r\n        build: {\r\n            local: {\r\n                // Local environment build configuration like plugins to install/uninstall go here.\r\n            }\r\n        },\r\n\r\n        /* Targets for multiple application development. (Optional.) If unspecified, application is installed in current directory. */\r\n        your_first_target: {\r\n            /* target-specific options override global options. */\r\n            options: {},\r\n            /* target-specific initialization configuration. */\r\n            init: {},\r\n            /* target-specific build configurations. */\r\n            build: {}\r\n        },\r\n\r\n        /* Multiple targets can be defined */\r\n        another_target: {\r\n        }\r\n    },\r\n});\r\n```\r\n\r\n### Task Options\r\n\r\n#### options.cordovaBin\r\nType: `String`\r\nDefault value: `'./node_modules/.bin/cordova'`\r\n\r\nPath to the Apache cordova binary.\r\n\r\n#### options.installDir\r\nType: `String`\r\nDefault value: `'./'`\r\n\r\nMobile application source installation directory. Caution: Multiple targets will overwrite the same directory unless target-specific options.installDir is defined.\r\n\r\n#### options.phonegapBin\r\nType: `String`\r\nDefault value: `'./node_modules/.bin/phonegap'`\r\n\r\nPath to the Adobe PhoneGap binary.\r\n\r\n### Initialization Configuration\r\n\r\n#### init.name\r\nType: `String`\r\nDefault value: `'HelloPhonegap'`\r\n\r\nThe PhoneGap mobile application's name.\r\n\r\n#### init.pkg\r\nType: `String`\r\nDefault value: `'com.example.hellophonegap'`\r\n\r\nPhoneGap application package namespace.\r\n\r\n#### init.install_os\r\nType: `Array`\r\nDefault value: `[]`\r\n\r\nMobile operating systems to install support for. Eg: `[\"android\",\"ios\"]`\r\nSee PhoneGap's [platform guides][platform_guide] documentation for additional information on supported operating systems and required development environment setup.\r\n\r\n#### init.uninstall_os\r\nType: `Array`\r\nDefault value: `[]`\r\n\r\nMobile operating systems to uninstall support for. Eg: `[\"firefoxos\"]`\r\n\r\n### Build Configuration\r\n\r\nCurrently, only local workflow task options are supported. Remote workflow is planned for a future release.\r\n\r\n#### build.local.plugins\r\nType: `Object`\r\n\r\nConfiguration object for specifying whether cordova plugins should be added or removed from target build environment.\r\n\r\n#### build.local.plugins.add\r\nType: `Array`\r\nDefault value: `[]`\r\n\r\nArray of cordova plugins to add to the build. Eg: `[\"device\",\"battery-status\",\"camera\"]`\r\n\r\n#### build.local.plugins.remove\r\nType: `Array`\r\nDefault value: `[]`\r\n\r\nArray of cordova plugins to remove from the build. Eg: `[\"geolocation\"]`\r\n\r\n### Usage Examples\r\n\r\n#### Single-target build installed in same directory as Gruntfile.\r\n\r\nIn this example, `android` and `ios` support will be enabled for the target PhoneGap application, which will be created in the same directory as the Gruntfile. The native application class file will be namespaced to `com.example.hellophonegap`. Eg. The android application entry point will be located at `./platforms/android/src/com/example/hellophonegap/HelloPhonegap.java` (relative to the gruntfile). The `build` task will add the `device`, `battery-status`, and `camera` plugins while removing the `geolocation` plugin from the build.\r\n\r\n```js\r\ngrunt.initConfig({\r\n\r\n    phonegrunt: {\r\n        options: {\r\n            cordovaBin: './node_modules/.bin/cordova',\r\n            installDir: './',\r\n            phonegapBin: './node_modules/.bin/phonegap'\r\n        },\r\n        init: {\r\n            name: 'HelloPhonegap',\r\n            pkg: 'com.example.hellophonegap',\r\n            install_os: [\"android\", \"ios\"],\r\n            uninstall_os: []\r\n        },\r\n        build: {\r\n            local: {\r\n                plugins: {\r\n                    add: [\"device\",\"battery-status\",\"camera\"],\r\n                    remove: [\"geolocation\"]\r\n                }\r\n            }\r\n        }\r\n    }\r\n});\r\n```\r\n\r\n#### Multi-target build created in separate directories.\r\n\r\nIn this example, `ios` and `android` support will be enabled for the `HelloPhonegap` and `GoodbyePhonegap` targets respectively. IOS and Android mobile applications will be created in the `./hellophonegap` and `./goodbyephonegap` directories relative to the Gruntfile. No plugins will be installed for the GoodbyePhonegap target.\r\n\r\n```js\r\ngrunt.initConfig({\r\n\r\n    phonegrunt: {\r\n        options: {\r\n            cordovaBin: './node_modules/.bin/cordova',\r\n            phonegapBin: './node_modules/.bin/phonegap'\r\n        },\r\n        HelloPhonegap: {\r\n            options: {\r\n                installDir: './hellophonegap',\r\n            },\r\n            init: {\r\n                name: 'HelloPhonegap',\r\n                pkg: 'com.example.hellophonegap',\r\n                install_os: [\"ios\"],\r\n                uninstall_os: []\r\n            },\r\n            build: {\r\n                local: {\r\n                    plugins: {\r\n                        add: [\"device\",\"battery-status\",\"camera\"],\r\n                        remove: [\"geolocation\"]\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        GoodbyePhonegap: {\r\n            options: {\r\n                installDir: './goodbyephonegap',\r\n            },\r\n            init: {\r\n                name: 'GoodbyePhonegap',\r\n                pkg: 'com.example.goodbyephonegap',\r\n                install_os: [\"android\"],\r\n                uninstall_os: []\r\n            }\r\n        }\r\n    }\r\n});\r\n```\r\n\r\nTo simply update plugin requirements for your application without performing init tasks, using the example above one can run:\r\n\r\n```shell\r\n$ grunt phonegrunt:HelloPhonegap:build\r\n```\r\n\r\n## Support\r\n\r\nPlease report any issues [here][issues] and feel absolutely welcome to fork and submit pull requests.\r\n\r\n## Contributing\r\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\r\n\r\n## Release History\r\n_(Nothing yet)_\r\n\r\n\r\n[issues]: https://github.com/realog32/phonegrunt/issues\r\n[platform_guide]: http://docs.phonegap.com/en/3.4.0/guide_platforms_index.md.html#Platform%20Guides","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}